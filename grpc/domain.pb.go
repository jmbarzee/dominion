// Code generated by protoc-gen-go. DO NOT EDIT.
// source: domain.proto

package grpcdomain

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// IdentityListRequest contains the name of the service the client is searching for
type GetServicesRequest struct {
	// Name is the name of the service which is requested
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetServicesRequest) Reset()         { *m = GetServicesRequest{} }
func (m *GetServicesRequest) String() string { return proto.CompactTextString(m) }
func (*GetServicesRequest) ProtoMessage()    {}
func (*GetServicesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{0}
}

func (m *GetServicesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesRequest.Unmarshal(m, b)
}
func (m *GetServicesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesRequest.Marshal(b, m, deterministic)
}
func (m *GetServicesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesRequest.Merge(m, src)
}
func (m *GetServicesRequest) XXX_Size() int {
	return xxx_messageInfo_GetServicesRequest.Size(m)
}
func (m *GetServicesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesRequest proto.InternalMessageInfo

func (m *GetServicesRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// IdentityListRequest contains the list of known addresses hosting the requested service
type GetServicesReply struct {
	// Services is the list of services an Identity currently offers
	Services             []*Address `protobuf:"bytes,1,rep,name=Services,proto3" json:"Services,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *GetServicesReply) Reset()         { *m = GetServicesReply{} }
func (m *GetServicesReply) String() string { return proto.CompactTextString(m) }
func (*GetServicesReply) ProtoMessage()    {}
func (*GetServicesReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{1}
}

func (m *GetServicesReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetServicesReply.Unmarshal(m, b)
}
func (m *GetServicesReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetServicesReply.Marshal(b, m, deterministic)
}
func (m *GetServicesReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetServicesReply.Merge(m, src)
}
func (m *GetServicesReply) XXX_Size() int {
	return xxx_messageInfo_GetServicesReply.Size(m)
}
func (m *GetServicesReply) XXX_DiscardUnknown() {
	xxx_messageInfo_GetServicesReply.DiscardUnknown(m)
}

var xxx_messageInfo_GetServicesReply proto.InternalMessageInfo

func (m *GetServicesReply) GetServices() []*Address {
	if m != nil {
		return m.Services
	}
	return nil
}

// Address is a network address
type Address struct {
	// IP is the IP address of the full address
	IP []byte `protobuf:"bytes,2,opt,name=IP,proto3" json:"IP,omitempty"`
	// Port is the port of the full address
	Port                 int32    `protobuf:"varint,3,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Address) Reset()         { *m = Address{} }
func (m *Address) String() string { return proto.CompactTextString(m) }
func (*Address) ProtoMessage()    {}
func (*Address) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{2}
}

func (m *Address) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Address.Unmarshal(m, b)
}
func (m *Address) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Address.Marshal(b, m, deterministic)
}
func (m *Address) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Address.Merge(m, src)
}
func (m *Address) XXX_Size() int {
	return xxx_messageInfo_Address.Size(m)
}
func (m *Address) XXX_DiscardUnknown() {
	xxx_messageInfo_Address.DiscardUnknown(m)
}

var xxx_messageInfo_Address proto.InternalMessageInfo

func (m *Address) GetIP() []byte {
	if m != nil {
		return m.IP
	}
	return nil
}

func (m *Address) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// IdentityListRequest contains the client's & peers' identities
type IdentityListRequest struct {
	// Identity is the identity of the client
	Identity *Identity `protobuf:"bytes,1,opt,name=Identity,proto3" json:"Identity,omitempty"`
	// IdentityList is a list of all domains known to the client
	IdentityList         []*Identity `protobuf:"bytes,2,rep,name=IdentityList,proto3" json:"IdentityList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IdentityListRequest) Reset()         { *m = IdentityListRequest{} }
func (m *IdentityListRequest) String() string { return proto.CompactTextString(m) }
func (*IdentityListRequest) ProtoMessage()    {}
func (*IdentityListRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{3}
}

func (m *IdentityListRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityListRequest.Unmarshal(m, b)
}
func (m *IdentityListRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityListRequest.Marshal(b, m, deterministic)
}
func (m *IdentityListRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityListRequest.Merge(m, src)
}
func (m *IdentityListRequest) XXX_Size() int {
	return xxx_messageInfo_IdentityListRequest.Size(m)
}
func (m *IdentityListRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityListRequest.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityListRequest proto.InternalMessageInfo

func (m *IdentityListRequest) GetIdentity() *Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *IdentityListRequest) GetIdentityList() []*Identity {
	if m != nil {
		return m.IdentityList
	}
	return nil
}

// IdentityListReply contains the server's & peers' identities
type IdentityListReply struct {
	// Identity is the identity of the server
	Identity *Identity `protobuf:"bytes,1,opt,name=Identity,proto3" json:"Identity,omitempty"`
	// IdentityList is a list of all domains known to the server
	IdentityList         []*Identity `protobuf:"bytes,2,rep,name=IdentityList,proto3" json:"IdentityList,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *IdentityListReply) Reset()         { *m = IdentityListReply{} }
func (m *IdentityListReply) String() string { return proto.CompactTextString(m) }
func (*IdentityListReply) ProtoMessage()    {}
func (*IdentityListReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{4}
}

func (m *IdentityListReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_IdentityListReply.Unmarshal(m, b)
}
func (m *IdentityListReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_IdentityListReply.Marshal(b, m, deterministic)
}
func (m *IdentityListReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_IdentityListReply.Merge(m, src)
}
func (m *IdentityListReply) XXX_Size() int {
	return xxx_messageInfo_IdentityListReply.Size(m)
}
func (m *IdentityListReply) XXX_DiscardUnknown() {
	xxx_messageInfo_IdentityListReply.DiscardUnknown(m)
}

var xxx_messageInfo_IdentityListReply proto.InternalMessageInfo

func (m *IdentityListReply) GetIdentity() *Identity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *IdentityListReply) GetIdentityList() []*Identity {
	if m != nil {
		return m.IdentityList
	}
	return nil
}

// Identity represents a domain
type Identity struct {
	// UUID is a Unique Identifier for the domain
	UUID string `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	// Version is the version of code being run by the domain
	Version string `protobuf:"bytes,2,opt,name=Version,proto3" json:"Version,omitempty"`
	// Services is the list of services an Identity currently offers
	Services []*Service `protobuf:"bytes,3,rep,name=Services,proto3" json:"Services,omitempty"`
	// LastContact is the time of the last heard communication (UnixNano)
	LastContact int64 `protobuf:"varint,4,opt,name=LastContact,proto3" json:"LastContact,omitempty"`
	// IP is the IP address which the domain was last known to communicate over
	IP []byte `protobuf:"bytes,5,opt,name=IP,proto3" json:"IP,omitempty"`
	// Port is the port which the domain was last known to belong communicate over
	Port                 int32    `protobuf:"varint,6,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Identity) Reset()         { *m = Identity{} }
func (m *Identity) String() string { return proto.CompactTextString(m) }
func (*Identity) ProtoMessage()    {}
func (*Identity) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{5}
}

func (m *Identity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Identity.Unmarshal(m, b)
}
func (m *Identity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Identity.Marshal(b, m, deterministic)
}
func (m *Identity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Identity.Merge(m, src)
}
func (m *Identity) XXX_Size() int {
	return xxx_messageInfo_Identity.Size(m)
}
func (m *Identity) XXX_DiscardUnknown() {
	xxx_messageInfo_Identity.DiscardUnknown(m)
}

var xxx_messageInfo_Identity proto.InternalMessageInfo

func (m *Identity) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *Identity) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

func (m *Identity) GetServices() []*Service {
	if m != nil {
		return m.Services
	}
	return nil
}

func (m *Identity) GetLastContact() int64 {
	if m != nil {
		return m.LastContact
	}
	return 0
}

func (m *Identity) GetIP() []byte {
	if m != nil {
		return m.IP
	}
	return nil
}

func (m *Identity) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

type Service struct {
	// Name is the name of the service
	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	// Port is the port which the service is availible at
	Port                 int32    `protobuf:"varint,2,opt,name=Port,proto3" json:"Port,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Service) Reset()         { *m = Service{} }
func (m *Service) String() string { return proto.CompactTextString(m) }
func (*Service) ProtoMessage()    {}
func (*Service) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{6}
}

func (m *Service) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Service.Unmarshal(m, b)
}
func (m *Service) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Service.Marshal(b, m, deterministic)
}
func (m *Service) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Service.Merge(m, src)
}
func (m *Service) XXX_Size() int {
	return xxx_messageInfo_Service.Size(m)
}
func (m *Service) XXX_DiscardUnknown() {
	xxx_messageInfo_Service.DiscardUnknown(m)
}

var xxx_messageInfo_Service proto.InternalMessageInfo

func (m *Service) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Service) GetPort() int32 {
	if m != nil {
		return m.Port
	}
	return 0
}

// OpenPositionRequest contains the name of the new open position
type OpenPositionRequest struct {
	// Name is the name of the service which is open
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenPositionRequest) Reset()         { *m = OpenPositionRequest{} }
func (m *OpenPositionRequest) String() string { return proto.CompactTextString(m) }
func (*OpenPositionRequest) ProtoMessage()    {}
func (*OpenPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{7}
}

func (m *OpenPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenPositionRequest.Unmarshal(m, b)
}
func (m *OpenPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenPositionRequest.Marshal(b, m, deterministic)
}
func (m *OpenPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenPositionRequest.Merge(m, src)
}
func (m *OpenPositionRequest) XXX_Size() int {
	return xxx_messageInfo_OpenPositionRequest.Size(m)
}
func (m *OpenPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OpenPositionRequest proto.InternalMessageInfo

func (m *OpenPositionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

// OpenPositionReply contains the consent and proficiency of the servir
type OpenPositionReply struct {
	// Sustain is the port which the service is availible at
	Sustain bool `protobuf:"varint,1,opt,name=Sustain,proto3" json:"Sustain,omitempty"`
	// Proficiency is the self determined
	Proficiency          int32    `protobuf:"varint,2,opt,name=Proficiency,proto3" json:"Proficiency,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OpenPositionReply) Reset()         { *m = OpenPositionReply{} }
func (m *OpenPositionReply) String() string { return proto.CompactTextString(m) }
func (*OpenPositionReply) ProtoMessage()    {}
func (*OpenPositionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{8}
}

func (m *OpenPositionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OpenPositionReply.Unmarshal(m, b)
}
func (m *OpenPositionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OpenPositionReply.Marshal(b, m, deterministic)
}
func (m *OpenPositionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OpenPositionReply.Merge(m, src)
}
func (m *OpenPositionReply) XXX_Size() int {
	return xxx_messageInfo_OpenPositionReply.Size(m)
}
func (m *OpenPositionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OpenPositionReply.DiscardUnknown(m)
}

var xxx_messageInfo_OpenPositionReply proto.InternalMessageInfo

func (m *OpenPositionReply) GetSustain() bool {
	if m != nil {
		return m.Sustain
	}
	return false
}

func (m *OpenPositionReply) GetProficiency() int32 {
	if m != nil {
		return m.Proficiency
	}
	return 0
}

// OfferAppointmentRequest contains the name of the new open position
type OfferPositionRequest struct {
	// Name is the name of the service which is open
	Name                 string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferPositionRequest) Reset()         { *m = OfferPositionRequest{} }
func (m *OfferPositionRequest) String() string { return proto.CompactTextString(m) }
func (*OfferPositionRequest) ProtoMessage()    {}
func (*OfferPositionRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{9}
}

func (m *OfferPositionRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferPositionRequest.Unmarshal(m, b)
}
func (m *OfferPositionRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferPositionRequest.Marshal(b, m, deterministic)
}
func (m *OfferPositionRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferPositionRequest.Merge(m, src)
}
func (m *OfferPositionRequest) XXX_Size() int {
	return xxx_messageInfo_OfferPositionRequest.Size(m)
}
func (m *OfferPositionRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferPositionRequest.DiscardUnknown(m)
}

var xxx_messageInfo_OfferPositionRequest proto.InternalMessageInfo

func (m *OfferPositionRequest) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type OfferPositionReply struct {
	// Accept is the servers acceptance of the position
	Accept               bool     `protobuf:"varint,1,opt,name=Accept,proto3" json:"Accept,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *OfferPositionReply) Reset()         { *m = OfferPositionReply{} }
func (m *OfferPositionReply) String() string { return proto.CompactTextString(m) }
func (*OfferPositionReply) ProtoMessage()    {}
func (*OfferPositionReply) Descriptor() ([]byte, []int) {
	return fileDescriptor_73e6234e76dbdb84, []int{10}
}

func (m *OfferPositionReply) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_OfferPositionReply.Unmarshal(m, b)
}
func (m *OfferPositionReply) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_OfferPositionReply.Marshal(b, m, deterministic)
}
func (m *OfferPositionReply) XXX_Merge(src proto.Message) {
	xxx_messageInfo_OfferPositionReply.Merge(m, src)
}
func (m *OfferPositionReply) XXX_Size() int {
	return xxx_messageInfo_OfferPositionReply.Size(m)
}
func (m *OfferPositionReply) XXX_DiscardUnknown() {
	xxx_messageInfo_OfferPositionReply.DiscardUnknown(m)
}

var xxx_messageInfo_OfferPositionReply proto.InternalMessageInfo

func (m *OfferPositionReply) GetAccept() bool {
	if m != nil {
		return m.Accept
	}
	return false
}

func init() {
	proto.RegisterType((*GetServicesRequest)(nil), "grpcdomain.GetServicesRequest")
	proto.RegisterType((*GetServicesReply)(nil), "grpcdomain.GetServicesReply")
	proto.RegisterType((*Address)(nil), "grpcdomain.Address")
	proto.RegisterType((*IdentityListRequest)(nil), "grpcdomain.IdentityListRequest")
	proto.RegisterType((*IdentityListReply)(nil), "grpcdomain.IdentityListReply")
	proto.RegisterType((*Identity)(nil), "grpcdomain.Identity")
	proto.RegisterType((*Service)(nil), "grpcdomain.Service")
	proto.RegisterType((*OpenPositionRequest)(nil), "grpcdomain.OpenPositionRequest")
	proto.RegisterType((*OpenPositionReply)(nil), "grpcdomain.OpenPositionReply")
	proto.RegisterType((*OfferPositionRequest)(nil), "grpcdomain.OfferPositionRequest")
	proto.RegisterType((*OfferPositionReply)(nil), "grpcdomain.OfferPositionReply")
}

func init() { proto.RegisterFile("domain.proto", fileDescriptor_73e6234e76dbdb84) }

var fileDescriptor_73e6234e76dbdb84 = []byte{
	// 472 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xbc, 0x54, 0x51, 0x6f, 0xd3, 0x30,
	0x10, 0x5e, 0xd2, 0xad, 0xed, 0xae, 0x05, 0xd1, 0xeb, 0x84, 0xa2, 0x0a, 0x46, 0xe4, 0xa7, 0x80,
	0xa0, 0x40, 0x79, 0xe1, 0x75, 0xda, 0x24, 0x54, 0x69, 0xd0, 0xc8, 0x55, 0x79, 0x0f, 0xa9, 0x0b,
	0x96, 0x36, 0x3b, 0xd8, 0x1e, 0x52, 0x9f, 0x10, 0xbf, 0x88, 0x5f, 0xc3, 0xff, 0x41, 0xf1, 0x92,
	0xd6, 0xa6, 0x59, 0xc5, 0xd3, 0xde, 0xec, 0xf3, 0x77, 0xdf, 0x77, 0xb9, 0xef, 0x2e, 0xd0, 0x5f,
	0xca, 0xeb, 0x8c, 0x8b, 0x71, 0xa1, 0xa4, 0x91, 0x08, 0x5f, 0x55, 0x91, 0xdf, 0x46, 0x48, 0x02,
	0xf8, 0x81, 0x99, 0x39, 0x53, 0x3f, 0x78, 0xce, 0x34, 0x65, 0xdf, 0x6f, 0x98, 0x36, 0x88, 0x70,
	0xf8, 0x29, 0xbb, 0x66, 0x51, 0x10, 0x07, 0xc9, 0x31, 0xb5, 0x67, 0x72, 0x0e, 0x8f, 0x3c, 0x64,
	0x71, 0xb5, 0xc6, 0xd7, 0xd0, 0xad, 0x03, 0x51, 0x10, 0xb7, 0x92, 0xde, 0x64, 0x38, 0xde, 0x92,
	0x8f, 0xcf, 0x96, 0x4b, 0xc5, 0xb4, 0xa6, 0x1b, 0x10, 0x79, 0x05, 0x9d, 0x2a, 0x88, 0x0f, 0x21,
	0x9c, 0xa6, 0x51, 0x18, 0x07, 0x49, 0x9f, 0x86, 0xd3, 0xb4, 0xd4, 0x4c, 0xa5, 0x32, 0x51, 0x2b,
	0x0e, 0x92, 0x23, 0x6a, 0xcf, 0xe4, 0x57, 0x00, 0xc3, 0xe9, 0x92, 0x09, 0xc3, 0xcd, 0xfa, 0x92,
	0x6b, 0x53, 0xd7, 0xf7, 0x06, 0xba, 0x75, 0xd8, 0xd6, 0xd8, 0x9b, 0x9c, 0xb8, 0xba, 0xf5, 0x1b,
	0xdd, 0xa0, 0xf0, 0x3d, 0xf4, 0x5d, 0xa2, 0x28, 0xb4, 0xd5, 0x36, 0x67, 0x79, 0x48, 0xf2, 0x13,
	0x06, 0x7e, 0x09, 0xe5, 0x87, 0xdf, 0x67, 0x01, 0xbf, 0x83, 0xad, 0x58, 0xd9, 0xa5, 0xc5, 0x62,
	0x7a, 0x51, 0x3b, 0x53, 0x9e, 0x31, 0x82, 0xce, 0x67, 0xa6, 0x34, 0x97, 0xc2, 0xb6, 0xf3, 0x98,
	0xd6, 0x57, 0xcf, 0x9f, 0xd6, 0xae, 0x3f, 0xd5, 0xdb, 0xd6, 0x1f, 0x8c, 0xa1, 0x77, 0x99, 0x69,
	0x73, 0x2e, 0x85, 0xc9, 0x72, 0x13, 0x1d, 0xc6, 0x41, 0xd2, 0xa2, 0x6e, 0xa8, 0xb2, 0xed, 0x68,
	0xc7, 0xb6, 0xb6, 0x63, 0xdb, 0x5b, 0xe8, 0x54, 0x8c, 0x4d, 0x93, 0xb4, 0x49, 0x09, 0x9d, 0x94,
	0xe7, 0x30, 0x9c, 0x15, 0x4c, 0xa4, 0x52, 0x73, 0xc3, 0xa5, 0xd8, 0x37, 0x88, 0x33, 0x18, 0xf8,
	0xd0, 0xd2, 0x90, 0x08, 0x3a, 0xf3, 0x1b, 0x6d, 0x32, 0x2e, 0x2c, 0xb6, 0x4b, 0xeb, 0x6b, 0xf9,
	0x49, 0xa9, 0x92, 0x2b, 0x9e, 0x73, 0x26, 0xf2, 0x75, 0x25, 0xea, 0x86, 0xc8, 0x0b, 0x38, 0x99,
	0xad, 0x56, 0x4c, 0xfd, 0x8f, 0xf8, 0x4b, 0xc0, 0x7f, 0xb0, 0xa5, 0xfa, 0x63, 0x68, 0x9f, 0xe5,
	0x39, 0x2b, 0x4c, 0x25, 0x5e, 0xdd, 0x26, 0x7f, 0x42, 0x68, 0x5f, 0xd8, 0x5e, 0xe3, 0x47, 0xe8,
	0x39, 0xeb, 0x83, 0xa7, 0xae, 0x0f, 0xbb, 0x1b, 0x38, 0x7a, 0x72, 0xe7, 0x7b, 0x71, 0xb5, 0x26,
	0x07, 0xb8, 0x80, 0xc1, 0xfc, 0x5b, 0xa6, 0x98, 0x3b, 0x29, 0xf8, 0xac, 0x69, 0x9a, 0x9c, 0xbd,
	0x19, 0x3d, 0xbd, 0x1b, 0x70, 0x4b, 0x9b, 0x42, 0xdf, 0xed, 0xad, 0xcf, 0xd8, 0x60, 0x90, 0xcf,
	0xb8, 0x63, 0x0b, 0x39, 0xc0, 0x39, 0x3c, 0xf0, 0x1a, 0x86, 0xb1, 0x97, 0xd1, 0xd0, 0xf7, 0xd1,
	0xe9, 0x1e, 0x84, 0x25, 0xfd, 0xd2, 0xb6, 0x3f, 0xb2, 0x77, 0x7f, 0x03, 0x00, 0x00, 0xff, 0xff,
	0xad, 0xda, 0x29, 0x2e, 0xd8, 0x04, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// DomainClient is the client API for Domain service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type DomainClient interface {
	// GetServices returns the availible services and their locations
	GetServices(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*GetServicesReply, error)
	// ShareIdentityList Requests the IdentityList which the domain is aware of
	ShareIdentityList(ctx context.Context, in *IdentityListRequest, opts ...grpc.CallOption) (*IdentityListReply, error)
	// OpenPosition declares the new service which is needed and requests Appointments
	OpenPosition(ctx context.Context, in *OpenPositionRequest, opts ...grpc.CallOption) (*OpenPositionReply, error)
	// OfferPosition appoints the server to host a service
	OfferPosition(ctx context.Context, in *OfferPositionRequest, opts ...grpc.CallOption) (*OfferPositionReply, error)
}

type domainClient struct {
	cc *grpc.ClientConn
}

func NewDomainClient(cc *grpc.ClientConn) DomainClient {
	return &domainClient{cc}
}

func (c *domainClient) GetServices(ctx context.Context, in *GetServicesRequest, opts ...grpc.CallOption) (*GetServicesReply, error) {
	out := new(GetServicesReply)
	err := c.cc.Invoke(ctx, "/grpcdomain.Domain/GetServices", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainClient) ShareIdentityList(ctx context.Context, in *IdentityListRequest, opts ...grpc.CallOption) (*IdentityListReply, error) {
	out := new(IdentityListReply)
	err := c.cc.Invoke(ctx, "/grpcdomain.Domain/ShareIdentityList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainClient) OpenPosition(ctx context.Context, in *OpenPositionRequest, opts ...grpc.CallOption) (*OpenPositionReply, error) {
	out := new(OpenPositionReply)
	err := c.cc.Invoke(ctx, "/grpcdomain.Domain/OpenPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *domainClient) OfferPosition(ctx context.Context, in *OfferPositionRequest, opts ...grpc.CallOption) (*OfferPositionReply, error) {
	out := new(OfferPositionReply)
	err := c.cc.Invoke(ctx, "/grpcdomain.Domain/OfferPosition", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// DomainServer is the server API for Domain service.
type DomainServer interface {
	// GetServices returns the availible services and their locations
	GetServices(context.Context, *GetServicesRequest) (*GetServicesReply, error)
	// ShareIdentityList Requests the IdentityList which the domain is aware of
	ShareIdentityList(context.Context, *IdentityListRequest) (*IdentityListReply, error)
	// OpenPosition declares the new service which is needed and requests Appointments
	OpenPosition(context.Context, *OpenPositionRequest) (*OpenPositionReply, error)
	// OfferPosition appoints the server to host a service
	OfferPosition(context.Context, *OfferPositionRequest) (*OfferPositionReply, error)
}

func RegisterDomainServer(s *grpc.Server, srv DomainServer) {
	s.RegisterService(&_Domain_serviceDesc, srv)
}

func _Domain_GetServices_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetServicesRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServer).GetServices(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcdomain.Domain/GetServices",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServer).GetServices(ctx, req.(*GetServicesRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domain_ShareIdentityList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(IdentityListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServer).ShareIdentityList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcdomain.Domain/ShareIdentityList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServer).ShareIdentityList(ctx, req.(*IdentityListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domain_OpenPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OpenPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServer).OpenPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcdomain.Domain/OpenPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServer).OpenPosition(ctx, req.(*OpenPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _Domain_OfferPosition_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(OfferPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(DomainServer).OfferPosition(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/grpcdomain.Domain/OfferPosition",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(DomainServer).OfferPosition(ctx, req.(*OfferPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Domain_serviceDesc = grpc.ServiceDesc{
	ServiceName: "grpcdomain.Domain",
	HandlerType: (*DomainServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetServices",
			Handler:    _Domain_GetServices_Handler,
		},
		{
			MethodName: "ShareIdentityList",
			Handler:    _Domain_ShareIdentityList_Handler,
		},
		{
			MethodName: "OpenPosition",
			Handler:    _Domain_OpenPosition_Handler,
		},
		{
			MethodName: "OfferPosition",
			Handler:    _Domain_OfferPosition_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "domain.proto",
}
